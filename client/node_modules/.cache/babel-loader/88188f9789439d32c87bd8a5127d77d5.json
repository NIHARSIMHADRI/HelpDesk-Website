{"ast":null,"code":"var _jsxFileName = \"/Users/niharsimhadri/Web Development/HelpDeskWebsite/client/src/Authentication.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Button from '@mui/material/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar usernameCheck = false;\nvar passwordCheck = false;\n\nfunction Authentication() {\n  _s();\n\n  const [listOfUsers, setListOfUsers] = useState([]);\n  const [credentials, setCredentials] = {\n    username: \"\",\n    password: \"\"\n  }; //const [username, setUsername] = useState(\"\");\n  //const [password, setPassword] = useState(\"\");\n\n  const [disable, setDisable] = useState(true);\n  const [userExists, setUserExists] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/users\").then(response => {\n      setListOfUsers(response.data);\n    });\n  }, []);\n  const username = credentials.username;\n  const password = credentials.password;\n\n  const createUser = () => {\n    axios.get(\"http://localhost:5000/users/\" + credentials.username + \"/\").then(response => {\n      console.log(response);\n      console.log(response.data);\n\n      if (response.data != null) {\n        setUserExists(true);\n      } else {\n        axios.post(\"http://localhost:5000/users\", {\n          username,\n          password\n        }).then(response => {\n          setListOfUsers([...listOfUsers, {\n            username,\n            password\n          }]);\n        });\n        setUserExists(false);\n        navigate('/helpdesk');\n      }\n    });\n  };\n\n  function usernameLengthCheck(event) {\n    if (event.target.value.length >= 5) {\n      usernameCheck = true;\n    } else {\n      usernameCheck = false;\n    }\n  }\n\n  function passwordLengthCheck(event) {\n    if (event.target.value.length >= 8) {\n      passwordCheck = true;\n    } else {\n      passwordCheck = false;\n    }\n  }\n\n  function buttonAppearance() {\n    //console.log(\"usernameCheck: \" + usernameCheck + \" passwordCheck: \" + passwordCheck);\n    if (usernameCheck === true && passwordCheck === true) {\n      setDisable(false); //console.log(\"It is enabled\");\n    } else {\n      setDisable(true); //console.log(\"It is disabled\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spacing\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authenticationPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"authenticationText\",\n        children: \"Please Sign Up For the Helpdesk Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"authenticationText\",\n        children: \"Make sure your username is 5 characters long and your password is 8 characters long\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputStyling\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"username...\",\n          onChange: event => {\n            setUsername(event.target.value);\n            usernameLengthCheck(event);\n            buttonAppearance();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password...\",\n          onChange: event => {\n            setPassword(event.target.value);\n            passwordLengthCheck(event);\n            buttonAppearance();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: disable,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: createUser,\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), userExists === true && /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"The user already exists and was not registered into the system\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Authentication, \"KN6r6+SczniSdhluoVwZmJGU9UM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Authentication;\nexport default Authentication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["/Users/niharsimhadri/Web Development/HelpDeskWebsite/client/src/Authentication.jsx"],"names":["useState","useEffect","React","axios","Button","useNavigate","usernameCheck","passwordCheck","Authentication","listOfUsers","setListOfUsers","credentials","setCredentials","username","password","disable","setDisable","userExists","setUserExists","navigate","get","then","response","data","createUser","console","log","post","usernameLengthCheck","event","target","value","length","passwordLengthCheck","buttonAppearance","setUsername","setPassword","color"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Button from '@mui/material/Button';\nimport { useNavigate } from 'react-router-dom';\n\nvar usernameCheck = false;\nvar passwordCheck = false;\n\nfunction Authentication() {\n  const [listOfUsers, setListOfUsers] = useState([]);\n  const [credentials, setCredentials] = ({\n    username: \"\",\n    password: \"\"\n  });\n  //const [username, setUsername] = useState(\"\");\n  //const [password, setPassword] = useState(\"\");\n  const [disable, setDisable] = useState(true);\n  const [userExists, setUserExists] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/users\").then((response) => {\n      setListOfUsers(response.data);\n    })\n  }, [])\n\n  const username = credentials.username;\n  const password = credentials.password;\n\n  const createUser = () => {\n    axios.get(\"http://localhost:5000/users/\" + credentials.username + \"/\").then((response) => {\n      console.log(response);\n      console.log(response.data);\n      if (response.data != null) {\n        setUserExists(true);\n      } else {\n        axios.post(\"http://localhost:5000/users\", {\n          username,\n          password,\n        }).then((response) => {\n          setListOfUsers([...listOfUsers, {\n            username,\n            password,\n          }]);\n        })\n        setUserExists(false);\n        navigate('/helpdesk');\n      }\n    })\n  }\n\n  function usernameLengthCheck(event) {\n    if (event.target.value.length >= 5) {\n      usernameCheck = true;\n    } else {\n      usernameCheck = false;\n    }\n  }\n\n  function passwordLengthCheck(event) {\n    if (event.target.value.length >= 8) {\n      passwordCheck = true;\n    } else {\n      passwordCheck = false;\n    }\n  }\n\n  function buttonAppearance() {\n    //console.log(\"usernameCheck: \" + usernameCheck + \" passwordCheck: \" + passwordCheck);\n    if (usernameCheck === true && passwordCheck === true) {\n      setDisable(false);\n      //console.log(\"It is enabled\");\n    } else {\n      setDisable(true);\n      //console.log(\"It is disabled\");\n    }\n  }\n\n  return (\n    <div className='spacing'>\n      <div className=\"authenticationPage\">\n        {/* <h1> Hey Dude </h1>\n      {console.log(listOfUsers)}\n        {listOfUsers.map((user) => {\n          return (\n            <div>    \n              /<h1>Username: {user.username}</h1>\n              <h1>Password: {user.password}</h1>\n            </div>\n          );\n        })} */}\n\n        <h1 className=\"authenticationText\">Please Sign Up For the Helpdesk Application</h1>\n        <h2 className=\"authenticationText\">Make sure your username is 5 characters long and your password is 8 characters long</h2>\n\n        <div className='inputStyling'>\n          <input type=\"text\" placeholder=\"username...\" onChange={(event) => {\n            setUsername(event.target.value);\n            usernameLengthCheck(event);\n            buttonAppearance();\n          }} />\n          <input type=\"password\" placeholder='password...' onChange={(event) => {\n            setPassword(event.target.value);\n            passwordLengthCheck(event);\n            buttonAppearance();\n          }} />\n        </div>\n        <Button disabled={disable} variant=\"contained\" color=\"primary\" onClick={createUser}>Create Account</Button>\n\n        {userExists === true && <h1 style={{ color: \"red\" }}>The user already exists and was not registered into the system</h1>}\n\n      </div>\n    </div>\n\n\n  );\n\n\n}\n\nexport default Authentication;\n\n"]},"metadata":{},"sourceType":"module"}