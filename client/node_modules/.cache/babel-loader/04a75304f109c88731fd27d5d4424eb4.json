{"ast":null,"code":"var _jsxFileName = \"/Users/niharsimhadri/Web Development/HelpDeskWebsite/client/src/Authentication.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Button from '@mui/material/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar usernameCheck = false;\nvar passwordCheck = false;\n\nfunction Authentication() {\n  _s();\n\n  const [listOfUsers, setListOfUsers] = useState([]);\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [disable, setDisable] = useState(true);\n  const [userExists, setUserExists] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/users\").then(response => {\n      setListOfUsers(response.data);\n    });\n  }, []);\n  const username = credentials.username;\n  const password = credentials.password;\n\n  const createUser = () => {\n    axios.get(\"http://localhost:5000/users/\" + credentials.username + \"/\").then(response => {\n      console.log(response);\n      console.log(response.data);\n\n      if (response.data != null) {\n        setUserExists(true);\n      } else {\n        axios.post(\"http://localhost:5000/users\", {\n          username,\n          password\n        }).then(response => {\n          setListOfUsers([...listOfUsers, {\n            username,\n            password\n          }]);\n        });\n        setUserExists(false);\n        navigate('/helpdesk');\n      }\n    });\n  };\n\n  function usernameLengthCheck(event) {\n    if (event.target.value.length >= 5) {\n      usernameCheck = true;\n    } else {\n      usernameCheck = false;\n    }\n  }\n\n  function passwordLengthCheck(event) {\n    if (event.target.value.length >= 8) {\n      passwordCheck = true;\n    } else {\n      passwordCheck = false;\n    }\n  }\n\n  function handleCred(event) {\n    const newCred = event.target.value;\n    const whichCred = event.target.name;\n    setCredentials(prevValue => {\n      if (whichCred === \"username\") {\n        return {\n          username: newCred,\n          password: prevValue.password\n        };\n      } else if (whichCred === \"password\") {\n        return {\n          username: prevValue.username,\n          password: newCred\n        };\n      }\n    });\n  }\n\n  function buttonAppearance() {\n    //console.log(\"usernameCheck: \" + usernameCheck + \" passwordCheck: \" + passwordCheck);\n    if (usernameCheck === true && passwordCheck === true) {\n      setDisable(false); //console.log(\"It is enabled\");\n    } else {\n      setDisable(true); //console.log(\"It is disabled\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spacing\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authenticationPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"authenticationText\",\n        children: \"Please Sign Up For the Helpdesk Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"authenticationText\",\n        children: \"Make sure your username is 5 characters long and your password is 8 characters long\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputStyling\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          type: \"text\",\n          placeholder: \"username...\",\n          value: credentials.username,\n          onChange: event => {\n            handleCred(event); //setUsername(event.target.value);\n\n            usernameLengthCheck(event);\n            buttonAppearance();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"password...\",\n          value: credentials.password,\n          onChange: event => {\n            handleCred(event); //setPassword(event.target.value);\n\n            passwordLengthCheck(event);\n            buttonAppearance();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: disable,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: createUser,\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), userExists === true && /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"The user already exists and was not registered into the system\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Authentication, \"5Qd0DjBl7qYWaTM1AZpNFLzYMrE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Authentication;\nexport default Authentication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["/Users/niharsimhadri/Web Development/HelpDeskWebsite/client/src/Authentication.jsx"],"names":["useState","useEffect","React","axios","Button","useNavigate","usernameCheck","passwordCheck","Authentication","listOfUsers","setListOfUsers","credentials","setCredentials","username","password","disable","setDisable","userExists","setUserExists","navigate","get","then","response","data","createUser","console","log","post","usernameLengthCheck","event","target","value","length","passwordLengthCheck","handleCred","newCred","whichCred","name","prevValue","buttonAppearance","color"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Button from '@mui/material/Button';\nimport { useNavigate } from 'react-router-dom';\n\nvar usernameCheck = false;\nvar passwordCheck = false;\n\nfunction Authentication() {\n  const [listOfUsers, setListOfUsers] = useState([]);\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [disable, setDisable] = useState(true);\n  const [userExists, setUserExists] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/users\").then((response) => {\n      setListOfUsers(response.data);\n    })\n  }, [])\n\n  const username = credentials.username;\n  const password = credentials.password;\n\n  const createUser = () => {\n    axios.get(\"http://localhost:5000/users/\" + credentials.username + \"/\").then((response) => {\n      console.log(response);\n      console.log(response.data);\n      if (response.data != null) {\n        setUserExists(true);\n      } else {\n        axios.post(\"http://localhost:5000/users\", {\n          username,\n          password,\n        }).then((response) => {\n          setListOfUsers([...listOfUsers, {\n            username,\n            password,\n          }]);\n        })\n        setUserExists(false);\n        navigate('/helpdesk');\n      }\n    })\n  }\n\n  function usernameLengthCheck(event) {\n    if (event.target.value.length >= 5) {\n      usernameCheck = true;\n    } else {\n      usernameCheck = false;\n    }\n  }\n\n  function passwordLengthCheck(event) {\n    if (event.target.value.length >= 8) {\n      passwordCheck = true;\n    } else {\n      passwordCheck = false;\n    }\n  }\n\n  function handleCred(event) {\n    const newCred = event.target.value;\n    const whichCred = event.target.name;\n\n    setCredentials(prevValue => {\n      if (whichCred === \"username\") {\n        return {\n          username: newCred,\n          password: prevValue.password\n        } \n      } else if (whichCred === \"password\") {\n          return {\n            username: prevValue.username,\n            password: newCred\n          }\n        }\n      }\n    )\n  }\n\n  function buttonAppearance() {\n    //console.log(\"usernameCheck: \" + usernameCheck + \" passwordCheck: \" + passwordCheck);\n    if (usernameCheck === true && passwordCheck === true) {\n      setDisable(false);\n      //console.log(\"It is enabled\");\n    } else {\n      setDisable(true);\n      //console.log(\"It is disabled\");\n    }\n  }\n\n  return (\n    <div className='spacing'>\n      <div className=\"authenticationPage\">\n        {/* <h1> Hey Dude </h1>\n      {console.log(listOfUsers)}\n        {listOfUsers.map((user) => {\n          return (\n            <div>    \n              /<h1>Username: {user.username}</h1>\n              <h1>Password: {user.password}</h1>\n            </div>\n          );\n        })} */}\n\n        <h1 className=\"authenticationText\">Please Sign Up For the Helpdesk Application</h1>\n        <h2 className=\"authenticationText\">Make sure your username is 5 characters long and your password is 8 characters long</h2>\n\n        <div className='inputStyling'>\n          <input name=\"username\" type=\"text\" placeholder=\"username...\" value={credentials.username} onChange={(event) => {\n            handleCred(event);\n            //setUsername(event.target.value);\n            usernameLengthCheck(event);\n            buttonAppearance();\n          }} />\n          <input name=\"password\" type=\"password\" placeholder='password...' value={credentials.password} onChange={(event) => {\n            handleCred(event);\n            //setPassword(event.target.value);\n            passwordLengthCheck(event);\n            buttonAppearance();\n          }} />\n        </div>\n        <Button disabled={disable} variant=\"contained\" color=\"primary\" onClick={createUser}>Create Account</Button>\n\n        {userExists === true && <h1 style={{ color: \"red\" }}>The user already exists and was not registered into the system</h1>}\n\n      </div>\n    </div>\n\n\n  );\n\n\n}\n\nexport default Authentication;\n\n"]},"metadata":{},"sourceType":"module"}