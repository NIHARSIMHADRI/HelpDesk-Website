{"ast":null,"code":"var _jsxFileName = \"/Users/niharsimhadri/Web Development/HelpDeskWebsite/client/src/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Button from '@mui/material/Button';\nimport { useNavigate } from 'react-router-dom'; //var accessibility = false;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\"\n  }); //const [username, setUsername] = useState(\"\");\n  //const [password, setPassword] = useState(\"\");\n\n  const [userExists, setUserExists] = useState(true);\n  const navigate = useNavigate();\n\n  const createUser = () => {\n    axios.get(\"http://localhost:5000/users/\" + credentials.username + \"/\" + credentials.password + \"/\").then(response => {\n      console.log(\"http://localhost:5000/users/\" + credentials.username + \"/\" + credentials.password + \"/\");\n      console.log(response.data);\n\n      if (response.data != null) {\n        setUserExists(true); //accessibility = true;\n\n        navigate('/helpdesk');\n      } else {\n        setUserExists(false);\n      }\n    });\n  };\n\n  function handleCred(event) {\n    const newCred = event.target.value;\n    const whichCred = event.target.name;\n    setCredentials(prevValue => {\n      if (whichCred === \"username\") {\n        return {\n          username: newCred,\n          password: prevValue.password\n        };\n      } else if (whichCred === \"password\") {\n        return {\n          username: prevValue.username,\n          password: newCred\n        };\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spacing\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authenticationPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"authenticationText\",\n        children: \"Please Log In the Helpdesk Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"authenticationText\",\n        children: \"Make sure your username is 5 characters long and your password is 8 characters long\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputStyling\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          type: \"text\",\n          placeholder: \"username...\",\n          value: credentials.username,\n          onChange: event => {\n            handleCred(event); //setUsername(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"password...\",\n          value: credentials.password,\n          onChange: event => {\n            handleCred(event); //setPassword(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: createUser,\n        children: \"Log in to Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), userExists === false && /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"The user does not exist in the system\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"3UrGM4+W6M6jZXw4X/sfgA2zifk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login; //export {accessibility};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/niharsimhadri/Web Development/HelpDeskWebsite/client/src/Login.jsx"],"names":["useState","React","axios","Button","useNavigate","Login","credentials","setCredentials","username","password","userExists","setUserExists","navigate","createUser","get","then","response","console","log","data","handleCred","event","newCred","target","value","whichCred","name","prevValue","color"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Button from '@mui/material/Button';\nimport { useNavigate } from 'react-router-dom';\n\n//var accessibility = false;\n\nfunction Login() {\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  //const [username, setUsername] = useState(\"\");\n  //const [password, setPassword] = useState(\"\");\n  const [userExists, setUserExists] = useState(true);\n  const navigate = useNavigate();\n\n  const createUser = () => {\n    axios.get(\"http://localhost:5000/users/\" + credentials.username + \"/\" + credentials.password + \"/\").then((response) => {\n      console.log(\"http://localhost:5000/users/\" + credentials.username + \"/\" + credentials.password + \"/\");\n      console.log(response.data);\n      if (response.data != null) {\n        setUserExists(true);\n        //accessibility = true;\n        navigate('/helpdesk');\n      } else {\n        setUserExists(false);\n      }\n    })\n  }\n\n  function handleCred(event) {\n    const newCred = event.target.value;\n    const whichCred = event.target.name;\n\n    setCredentials(prevValue => {\n      if (whichCred === \"username\") {\n        return {\n          username: newCred,\n          password: prevValue.password\n        } \n      } else if (whichCred === \"password\") {\n          return {\n            username: prevValue.username,\n            password: newCred\n          }\n        }\n      }\n    )\n  }\n\n  return (\n    <div className='spacing'>\n      <div className=\"authenticationPage\">\n        {/* <h1> Hey Dude </h1>\n      {console.log(listOfUsers)}\n        {listOfUsers.map((user) => {\n          return (\n            <div>    \n              /<h1>Username: {user.username}</h1>\n              <h1>Password: {user.password}</h1>\n            </div>\n          );\n        })} */}\n\n        <h1 className=\"authenticationText\">Please Log In the Helpdesk Application</h1>\n        <h2 className=\"authenticationText\">Make sure your username is 5 characters long and your password is 8 characters long</h2>\n\n        <div className='inputStyling'>\n          <input name=\"username\" type=\"text\" placeholder=\"username...\" value = {credentials.username} onChange={(event) => {\n            handleCred(event);\n            //setUsername(event.target.value);\n          }} />\n          <input name=\"password\" type=\"password\" placeholder='password...' value = {credentials.password} onChange={(event) => {\n            handleCred(event);\n            //setPassword(event.target.value);\n          }} />\n        </div>\n        <Button variant=\"contained\" color=\"primary\" onClick={createUser}>Log in to Account</Button>\n\n        {userExists === false && <h1 style={{ color: \"red\" }}>The user does not exist in the system</h1>}\n\n      </div>\n    </div>\n\n\n  );\n\n\n}\n\nexport default Login;\n//export {accessibility};\n"]},"metadata":{},"sourceType":"module"}