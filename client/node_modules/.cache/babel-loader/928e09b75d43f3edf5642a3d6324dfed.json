{"ast":null,"code":"var _jsxFileName = \"/Users/niharsimhadri/Web Development/HelpDeskWebsite/client/src/CreateBug.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateBug(props) {\n  _s();\n\n  // priority can have values from 1 to 3 with 3 being the highest priority (string for testing)\n  const [bug, setBug] = useState({\n    title: \"\",\n    priority: 0,\n    description: \"\",\n    dateCreated: \"\",\n    status: \"\"\n  });\n\n  function writeBug(event) {\n    const name = event.target.name;\n    var value = event.target.value;\n    var possibleNumber = event.target.valueAsNumber;\n    setBug(prevBug => {\n      if (name === \"priority\") {\n        if (possibleNumber > 3) {\n          possibleNumber = 3;\n        } else if (possibleNumber < 1) {\n          possibleNumber = 1;\n        }\n      }\n\n      return { ...prevBug,\n        [name]: possibleNumber || value\n      };\n    });\n    event.preventDefault();\n  }\n\n  function submitBug(event) {\n    props.onAdd(bug);\n    setBug({\n      title: \"\",\n      priority: 0,\n      description: \"\",\n      dateCreated: \"\",\n      status: \"\"\n    });\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: writeBug,\n        name: \"title\",\n        value: bug.title,\n        placeholder: \"Set Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: writeBug,\n        name: \"priority\",\n        value: Number(bug.priority),\n        placeholder: \"Set priority level (1-3)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: writeBug,\n        name: \"description\",\n        value: bug.description,\n        placeholder: \"Description of Bug\",\n        rows: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        onChange: writeBug,\n        name: \"dateCreated\",\n        value: bug.dateCreated,\n        placeholder: \"Date Bug was created\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: writeBug,\n        name: \"status\",\n        value: bug.status,\n        placeholder: \"Status of the Bug\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitBug,\n        children: \"Add Bug\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateBug, \"wSxSLHQsLR/zM2zQNitQDkpC+lk=\");\n\n_c = CreateBug;\nexport default CreateBug;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateBug\");","map":{"version":3,"sources":["/Users/niharsimhadri/Web Development/HelpDeskWebsite/client/src/CreateBug.jsx"],"names":["React","useState","CreateBug","props","bug","setBug","title","priority","description","dateCreated","status","writeBug","event","name","target","value","possibleNumber","valueAsNumber","prevBug","preventDefault","submitBug","onAdd","Number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n\nfunction CreateBug(props) {\n    // priority can have values from 1 to 3 with 3 being the highest priority (string for testing)\n    const [bug, setBug] = useState({\n        title: \"\",\n        priority: 0,\n        description: \"\",\n        dateCreated: \"\",\n        status: \"\"\n    })\n\n    function writeBug(event) {\n        const name = event.target.name;\n        var value = event.target.value;\n        var possibleNumber = event.target.valueAsNumber;\n\n        setBug((prevBug) => {\n            if (name === \"priority\") {\n                if (possibleNumber > 3) {\n                    possibleNumber = 3;\n                } else if (possibleNumber < 1) {\n                    possibleNumber = 1;\n                }\n            }\n\n            return {\n                ...prevBug,\n                [name]: possibleNumber || value\n            }\n        })\n\n        event.preventDefault();\n    }\n\n    function submitBug(event) {\n        props.onAdd(bug)\n        setBug({title:\"\", priority:0, description:\"\", dateCreated:\"\", status:\"\"});\n        event.preventDefault();\n    }\n\n\n    return (\n        <div>\n            <form>\n                <input type=\"text\"\n                    onChange={writeBug} \n                    name=\"title\"\n                    value={bug.title}\n                    placeholder=\"Set Title\"\n                />\n                <input type=\"number\"\n                    onChange={writeBug}\n                    name=\"priority\"\n                    value={Number(bug.priority)}\n                    placeholder=\"Set priority level (1-3)\"\n                 />\n                 <textarea\n                    onChange={writeBug} \n                    name=\"description\"\n                    value={bug.description}\n                    placeholder='Description of Bug' \n                    rows=\"5\" \n                 />\n                 <input type=\"date\"\n                    onChange={writeBug}\n                    name=\"dateCreated\"\n                    value={bug.dateCreated}\n                    placeholder=\"Date Bug was created\"\n                />\n                <input type=\"text\"\n                    onChange={writeBug}\n                    name=\"status\"\n                    value={bug.status}\n                    placeholder=\"Status of the Bug\"\n                />\n                <button onClick={submitBug}>\n                    Add Bug\n                </button>\n            </form>\n        </div>\n    )\n}\n\n\nexport default CreateBug;"]},"metadata":{},"sourceType":"module"}